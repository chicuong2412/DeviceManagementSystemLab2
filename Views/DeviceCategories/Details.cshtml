@model DeviceManagementSystem.Models.DeviceCategory

@{
    ViewData["Title"] = "Category Details";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1><i class="fas fa-tags"></i> Category Details</h1>
    <div>
        <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-warning">
            <i class="fas fa-edit"></i> Edit
        </a>
        <a asp-action="Index" class="btn btn-secondary">
            <i class="fas fa-arrow-left"></i> Back to List
        </a>
    </div>
</div>

<div class="row">
    <div class="col-md-8">
        <div class="card">
            <div class="card-header">
                <h5 class="mb-0"><i class="fas fa-info-circle"></i> Category Information</h5>
            </div>
            <div class="card-body">
                <dl class="row">
                    <dt class="col-sm-3">@Html.DisplayNameFor(model => model.Id)</dt>
                    <dd class="col-sm-9">@Html.DisplayFor(model => model.Id)</dd>

                    <dt class="col-sm-3">@Html.DisplayNameFor(model => model.Name)</dt>
                    <dd class="col-sm-9">
                        <strong class="text-primary">@Html.DisplayFor(model => model.Name)</strong>
                    </dd>

                    <dt class="col-sm-3">@Html.DisplayNameFor(model => model.Description)</dt>
                    <dd class="col-sm-9">
                        @if (string.IsNullOrEmpty(Model.Description))
                        {
                            <span class="text-muted">No description provided</span>
                        }
                        else
                        {
                            @Html.DisplayFor(model => model.Description)
                        }
                    </dd>

                    <dt class="col-sm-3">Device Count</dt>
                    <dd class="col-sm-9">
                        <div class="d-flex align-items-center">
                            <span class="badge bg-primary fs-6 me-2">@Model.Devices.Count</span>
                            @if (Model.Devices.Count == 1)
                            {
                                <span class="text-muted">device</span>
                            }
                            else
                            {
                                <span class="text-muted">devices</span>
                            }
                        </div>
                        @if (Model.Devices.Count > 0)
                        {
                            <small class="text-muted d-block mt-1">
                                @{
                                    var inUseCount = Model.Devices.Count(d => d.Status == DeviceManagementSystem.Models.DeviceStatus.InUse);
                                    var brokenCount = Model.Devices.Count(d => d.Status == DeviceManagementSystem.Models.DeviceStatus.Broken);
                                    var maintenanceCount = Model.Devices.Count(d => d.Status == DeviceManagementSystem.Models.DeviceStatus.UnderMaintenance);
                                }
                                @inUseCount in use, @maintenanceCount under maintenance, @brokenCount broken
                            </small>
                        }
                    </dd>
                </dl>
            </div>
        </div>

        @if (Model.Devices.Any())
        {
            <div class="card mt-4">
                <div class="card-header">
                    <h5 class="mb-0"><i class="fas fa-laptop"></i> Devices in this Category</h5>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-striped table-hover">
                            <thead class="table-dark">
                                <tr>
                                    <th>Device Name</th>
                                    <th>Device Code</th>
                                    <th>Status</th>
                                    <th>Date of Entry</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var device in Model.Devices.OrderBy(d => d.Name))
                                {
                                    <tr>
                                        <td>
                                            <strong>@Html.DisplayFor(modelItem => device.Name)</strong>
                                        </td>
                                        <td>
                                            <code class="bg-light px-2 py-1 rounded">@Html.DisplayFor(modelItem => device.DeviceCode)</code>
                                        </td>
                                        <td>
                                            @{
                                                var statusClass = device.Status switch
                                                {
                                                    DeviceManagementSystem.Models.DeviceStatus.InUse => "bg-success",
                                                    DeviceManagementSystem.Models.DeviceStatus.Broken => "bg-danger",
                                                    DeviceManagementSystem.Models.DeviceStatus.UnderMaintenance => "bg-warning",
                                                    _ => "bg-secondary"
                                                };
                                            }
                                            <span class="badge @statusClass">@Html.DisplayFor(modelItem => device.Status)</span>
                                        </td>
                                        <td>
                                            <i class="fas fa-calendar-alt"></i> @Html.DisplayFor(modelItem => device.DateOfEntry)
                                            @{
                                                var daysSinceEntry = (DateTime.Today - device.DateOfEntry).Days;
                                                var entryText = daysSinceEntry == 0 ? "Today" : 
                                                               daysSinceEntry == 1 ? "Yesterday" : 
                                                               $"{daysSinceEntry} days ago";
                                            }
                                            <br><small class="text-muted">(@entryText)</small>
                                        </td>
                                        <td>
                                            <div class="btn-group" role="group">
                                                <a asp-controller="Devices" asp-action="Details" asp-route-id="@device.Id" class="btn btn-sm btn-info">
                                                    <i class="fas fa-eye"></i> View
                                                </a>
                                                <a asp-controller="Devices" asp-action="Edit" asp-route-id="@device.Id" class="btn btn-sm btn-warning">
                                                    <i class="fas fa-edit"></i> Edit
                                                </a>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        }
        else
        {
            <div class="card mt-4">
                <div class="card-body text-center py-4">
                    <i class="fas fa-inbox fa-3x text-muted mb-3"></i>
                    <h5 class="text-muted">No devices in this category</h5>
                    <p class="text-muted">This category doesn't have any devices assigned yet.</p>
                </div>
            </div>
        }
    </div>

    <div class="col-md-4">
        <div class="card">
            <div class="card-header">
                <h5 class="mb-0"><i class="fas fa-chart-pie"></i> Status Summary</h5>
            </div>
            <div class="card-body">
                @if (Model.Devices.Any())
                {
                    var inUseCount = Model.Devices.Count(d => d.Status == DeviceManagementSystem.Models.DeviceStatus.InUse);
                    var brokenCount = Model.Devices.Count(d => d.Status == DeviceManagementSystem.Models.DeviceStatus.Broken);
                    var maintenanceCount = Model.Devices.Count(d => d.Status == DeviceManagementSystem.Models.DeviceStatus.UnderMaintenance);

                    <div class="mb-3">
                        <div class="d-flex justify-content-between align-items-center mb-2">
                            <span>In Use</span>
                            <span class="badge bg-success">@inUseCount</span>
                        </div>
                        <div class="progress mb-3" style="height: 8px;">
                            <div class="progress-bar bg-success" style="width: @(Model.Devices.Count > 0 ? (inUseCount * 100 / Model.Devices.Count) : 0)%"></div>
                        </div>
                    </div>

                    <div class="mb-3">
                        <div class="d-flex justify-content-between align-items-center mb-2">
                            <span>Under Maintenance</span>
                            <span class="badge bg-warning">@maintenanceCount</span>
                        </div>
                        <div class="progress mb-3" style="height: 8px;">
                            <div class="progress-bar bg-warning" style="width: @(Model.Devices.Count > 0 ? (maintenanceCount * 100 / Model.Devices.Count) : 0)%"></div>
                        </div>
                    </div>

                    <div class="mb-3">
                        <div class="d-flex justify-content-between align-items-center mb-2">
                            <span>Broken</span>
                            <span class="badge bg-danger">@brokenCount</span>
                        </div>
                        <div class="progress mb-3" style="height: 8px;">
                            <div class="progress-bar bg-danger" style="width: @(Model.Devices.Count > 0 ? (brokenCount * 100 / Model.Devices.Count) : 0)%"></div>
                        </div>
                    </div>
                }
                else
                {
                    <p class="text-muted text-center">No devices to display statistics</p>
                }
            </div>
        </div>

        <div class="card mt-3">
            <div class="card-header">
                <h5 class="mb-0"><i class="fas fa-tools"></i> Quick Actions</h5>
            </div>
            <div class="card-body">
                <div class="d-grid gap-2">
                    <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-warning">
                        <i class="fas fa-edit"></i> Edit Category
                    </a>
                    <a asp-action="Delete" asp-route-id="@Model.Id" class="btn btn-danger">
                        <i class="fas fa-trash"></i> Delete Category
                    </a>
                </div>
            </div>
        </div>
    </div>
</div> 