@model DeviceManagementSystem.Models.Device

@{
    ViewData["Title"] = "Device Details";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h1><i class="fas fa-laptop"></i> Device Details</h1>
    <div>
        <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-warning">
            <i class="fas fa-edit"></i> Edit
        </a>
        <a asp-action="Index" class="btn btn-secondary">
            <i class="fas fa-arrow-left"></i> Back to List
        </a>
    </div>
</div>

<div class="row">
    <div class="col-md-8">
        <div class="card">
            <div class="card-header">
                <h5 class="mb-0"><i class="fas fa-info-circle"></i> Device Information</h5>
            </div>
            <div class="card-body">
                <dl class="row">
                    <dt class="col-sm-3">@Html.DisplayNameFor(model => model.Id)</dt>
                    <dd class="col-sm-9">@Html.DisplayFor(model => model.Id)</dd>

                    <dt class="col-sm-3">@Html.DisplayNameFor(model => model.Name)</dt>
                    <dd class="col-sm-9">
                        <strong class="text-primary fs-5">@Html.DisplayFor(model => model.Name)</strong>
                    </dd>

                    <dt class="col-sm-3">@Html.DisplayNameFor(model => model.DeviceCode)</dt>
                    <dd class="col-sm-9">
                        <code class="bg-light px-3 py-2 rounded fs-6">@Html.DisplayFor(model => model.DeviceCode)</code>
                    </dd>

                    <dt class="col-sm-3">@Html.DisplayNameFor(model => model.DeviceCategory)</dt>
                    <dd class="col-sm-9">
                        <div class="d-flex align-items-center">
                            <span class="badge bg-secondary fs-6 me-2">@Html.DisplayFor(model => model.DeviceCategory!.Name)</span>
                            <a asp-controller="DeviceCategories" asp-action="Details" asp-route-id="@Model.DeviceCategoryId" class="btn btn-sm btn-outline-secondary">
                                <i class="fas fa-external-link-alt"></i> View Category
                            </a>
                        </div>
                        @if (!string.IsNullOrEmpty(Model.DeviceCategory!.Description))
                        {
                            <small class="text-muted d-block mt-1">@Model.DeviceCategory.Description</small>
                        }
                    </dd>

                    <dt class="col-sm-3">@Html.DisplayNameFor(model => model.Status)</dt>
                    <dd class="col-sm-9">
                        @{
                            var statusClass = Model.Status switch
                            {
                                DeviceManagementSystem.Models.DeviceStatus.InUse => "bg-success",
                                DeviceManagementSystem.Models.DeviceStatus.Broken => "bg-danger",
                                DeviceManagementSystem.Models.DeviceStatus.UnderMaintenance => "bg-warning",
                                _ => "bg-secondary"
                            };
                            var statusIcon = Model.Status switch
                            {
                                DeviceManagementSystem.Models.DeviceStatus.InUse => "fas fa-check-circle",
                                DeviceManagementSystem.Models.DeviceStatus.Broken => "fas fa-exclamation-triangle",
                                DeviceManagementSystem.Models.DeviceStatus.UnderMaintenance => "fas fa-tools",
                                _ => "fas fa-question-circle"
                            };
                        }
                        <span class="badge @statusClass fs-6">
                            <i class="@statusIcon"></i> @Html.DisplayFor(model => model.Status)
                        </span>
                    </dd>

                    <dt class="col-sm-3">@Html.DisplayNameFor(model => model.DateOfEntry)</dt>
                    <dd class="col-sm-9">
                        <i class="fas fa-calendar-alt"></i> @Html.DisplayFor(model => model.DateOfEntry)
                        @{
                            var daysSinceEntry = (DateTime.Today - Model.DateOfEntry).Days;
                            var entryText = daysSinceEntry == 0 ? "Today" : 
                                           daysSinceEntry == 1 ? "Yesterday" : 
                                           $"{daysSinceEntry} days ago";
                        }
                        <small class="text-muted">(@entryText)</small>
                    </dd>
                </dl>
            </div>
        </div>


    </div>

    <div class="col-md-4">
        <div class="card">
            <div class="card-header">
                <h5 class="mb-0"><i class="fas fa-chart-bar"></i> Category Statistics</h5>
            </div>
            <div class="card-body">
                <div class="text-center mb-3">
                    <div class="display-4 text-primary">@Model.DeviceCategory!.Name</div>
                    <small class="text-muted">Category</small>
                    @if (!string.IsNullOrEmpty(Model.DeviceCategory.Description))
                    {
                        <div class="mt-2">
                            <small class="text-muted">@Model.DeviceCategory.Description</small>
                        </div>
                    }
                </div>

                <div class="row text-center">
                    <div class="col-6">
                        <div class="border-end">
                            <div class="h4 text-success">@Model.DeviceCategory.Devices.Count(d => d.Status == DeviceManagementSystem.Models.DeviceStatus.InUse)</div>
                            <small class="text-muted">In Use</small>
                        </div>
                    </div>
                    <div class="col-6">
                        <div class="h4 text-warning">@Model.DeviceCategory.Devices.Count(d => d.Status == DeviceManagementSystem.Models.DeviceStatus.UnderMaintenance)</div>
                        <small class="text-muted">Maintenance</small>
                    </div>
                </div>

                <hr>

                <div class="text-center">
                    <div class="h4 text-danger">@Model.DeviceCategory.Devices.Count(d => d.Status == DeviceManagementSystem.Models.DeviceStatus.Broken)</div>
                    <small class="text-muted">Broken</small>
                </div>

                <hr>

                <div class="text-center">
                    <div class="h5 text-info">@Model.DeviceCategory.Devices.Count</div>
                    <small class="text-muted">Total Devices</small>
                </div>
            </div>
        </div>

        <div class="card mt-3">
            <div class="card-header">
                <h5 class="mb-0"><i class="fas fa-tools"></i> Quick Actions</h5>
            </div>
            <div class="card-body">
                <div class="d-grid gap-2">
                    <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-warning">
                        <i class="fas fa-edit"></i> Edit Device
                    </a>
                    <a asp-action="Delete" asp-route-id="@Model.Id" class="btn btn-danger">
                        <i class="fas fa-trash"></i> Delete Device
                    </a>
                    <a asp-controller="DeviceCategories" asp-action="Details" asp-route-id="@Model.DeviceCategoryId" class="btn btn-outline-primary">
                        <i class="fas fa-tags"></i> View Category
                    </a>
                </div>
            </div>
        </div>

        <div class="card mt-3">
            <div class="card-header">
                <h5 class="mb-0"><i class="fas fa-info-circle"></i> Status Information</h5>
            </div>
            <div class="card-body">
                @switch (Model.Status)
                {
                    case DeviceManagementSystem.Models.DeviceStatus.InUse:
                        <div class="alert alert-success mb-0">
                            <i class="fas fa-check-circle"></i>
                            <strong>Device is in use</strong><br>
                            <small>This device is currently being used and is operational.</small>
                        </div>
                        break;
                    case DeviceManagementSystem.Models.DeviceStatus.Broken:
                        <div class="alert alert-danger mb-0">
                            <i class="fas fa-exclamation-triangle"></i>
                            <strong>Device is broken</strong><br>
                            <small>This device requires repair or replacement.</small>
                        </div>
                        break;
                    case DeviceManagementSystem.Models.DeviceStatus.UnderMaintenance:
                        <div class="alert alert-warning mb-0">
                            <i class="fas fa-tools"></i>
                            <strong>Under maintenance</strong><br>
                            <small>This device is currently being serviced.</small>
                        </div>
                        break;
                }
            </div>
        </div>
    </div>
</div> 